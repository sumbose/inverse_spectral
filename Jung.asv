% Algorithm from:
% A. Jung, G. Hannak and N. Goertz, 
% "Graphical LASSO based Model Selection for Time Series," 
% IEEE Signal Processing Letters, vol. 22, no. 10, pp. 1781-1785, Oct. 2015.

clear; clear all;
data = 1; % 1 for synthetic; 2 for MRI_HC; 3 for MRI 4 for EEG

% Choose Data File:
%filename = 'fMRI-TBI\FuncTimeSeries\NIH-101_20110331_ts.mat';
filename = 'HC_fMRI_2\NIH-218_20111215_fMRI_ROIts.mat';
%filename = 'rsEEG_AveCon\BM_MN_EO.mat';

if data ==1
    N = 200;
    p = 10;
    rng(138);
    cov = eye(p)*1;

% Uncomment one of the following graph structures
%     % Star graph
%     cov(1,2:5) = .4;
%     cov(2:5,1) = .4;
    
    % Loop graph
    cov(1,[2,4,5]) = .4; 
    cov([2,4,5],1) = .4;
    cov(3,2) = .4; cov(2,3) = .4;
    cov(4,3) = .4; cov(3,4) = .4;

    K_th =@(theta) cov./3+cov.*(2/9*cos(2*pi*theta))+cov.*(cos(4*pi*theta)/9);
    cov=inv(cov);
    noise = mvnrnd(zeros(1,p), cov, N); % N by p
    
    X = zeros(N-2,p);
    for i=3:N
        X(i-2,:) = 1/3*(noise(i,:)+noise(i-1,:)+noise(i-2,:));
    end
    N = N-2; % due to the above way of generating time series

elseif data == 2
    load(filename,'rvol')
    X=rvol.';
    N=200;p=86;

elseif data == 3
    load(filename,'vol')
    X=vol.';
    N=200;p=86;

elseif data == 4
    load(filename)
    X=1e11*AveEpoch(:,1:20:end).';
    [N,p] = size(X);

end

rho_min = 0.1*sqrt(1/9+4/81+1/81);

F=4;
lambda = 0.0000001; rho = .005; 
%lambda = 1*rho_min/(192*4*(2*1.25+1)^2)

% figure
%  colormap jet;
% subplot(3,1,1)
% [~,K]=gLASSO(X,F,.2,rho);
% % gsupp_K=sum(abs(K),3);
% % imagesc(gsupp_K)
% parfor f=1:F
% for i=1:p
%     for j=1:p
%         coh(i,j,f)=K(i,j,f)/sqrt(K(i,i,f)*K(j,j,f));
%     end
% end
% end
% gsupp_coh=sum(abs(coh),3);
% imagesc(gsupp_coh)
% colorbar
% 
% subplot(3,1,2)
% [~,K]=gLASSO(X,F,.1,rho);
% %gsupp_K=sum(abs(K),3);
% %imagesc(gsupp_K)
% parfor f=1:F
% for i=1:p
%     for j=1:p
%         coh(i,j,f)=K(i,j,f)/sqrt(K(i,i,f)*K(j,j,f));
%     end
% end
% end
% gsupp_coh=sum(abs(coh),3);
% imagesc(gsupp_coh)
% colorbar
% 
% subplot(3,1,3)
% [~,K]=gLASSO(X,F,.05,rho);
% % gsupp_K=sum(abs(K),3);
% % imagesc(gsupp_K)
% parfor f=1:F
% for i=1:p
%     for j=1:p
%         coh(i,j,f)=K(i,j,f)/sqrt(K(i,i,f)*K(j,j,f));
%     end
% end
% end
% gsupp_coh=sum(abs(coh),3);
% imagesc(gsupp_coh)
% colorbar


[~,K]=gLASSO(X,F,.001,rho);

% gsupp_K=sum(abs(K),3);
% imagesc(gsupp_K)

% optional: normalize by diagonal entries
parfor f=1:F
for i=1:p
    for j=1:p
        coh(i,j,f)=K(i,j,f)/sqrt(K(i,i,f)*K(j,j,f));
    end
end
end
gsupp_coh=sum(abs(coh),3);
imagesc(gsupp_coh)
colorbar

% lambda_vec = .1:.02:.4 ;
% lambda_vec = .01:.01:.04;
% eta_vec = 0:1:15 ;
% length_lambda = length(lambda_vec); length_eta = length(eta_vec);

% lambda=.035; eta=5;
% [S,K]=gLASSO(X,F,lambda,rho);
% sum(abs(K),3)
% nonzero_entries = sum(abs(K),3)>eta;
% num_edges = sum(sum(triu(nonzero_entries,0)))+p
% assert(0==1)

% for i = 1:length(lambda_vec)
%     lambda = lambda_vec(i)
%     [S,K]=gLASSO(X,F,lambda,rho);
%     K_allfreq=sum(abs(K),3)
%     for j = 1:length(eta_vec)
%         eta = eta_vec(j)        
%         
%         nonzero_entries = K_allfreq>eta;
%         %nonzero_entries(logical(eye(p))) = 1;
%         num_edges = sum(sum(triu(nonzero_entries,1)));
%         %assert(num_edges>0);
%         for f =1:F
%             K(:,:,f)=K(:,:,f).*nonzero_entries;
%         end
%         
%         bic_vec = BIC(real(S),K,sqrt(N-2),num_edges);
%         bic(i,j) = sum(bic_vec);
%     end
% end
% bic
% figure
% [L,E]=meshgrid(lambda_vec, eta_vec);
% surf(L,E,bic.')
% xlabel('lambda');ylabel('eta');zlabel('BIC');